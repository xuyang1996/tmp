name: build-push-deploy-docker-image

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  build-push-deploy-docker-image:
    # if: github.event.pull_request.merged == true
    name: build-push-deploy-docker-image
    runs-on: ubuntu-latest

    steps:
      - name: check-out-code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
          # role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          # role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          # role-duration-seconds: 1200
          # role-session-name: MySessionName

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
          docker ps
          aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 312013929070.dkr.ecr.ap-northeast-1.amazonaws.com
      # - name: build-push-docker-image
      #   uses: mr-smithers-excellent/docker-build-push@v5
      #   with:
      #     image: server
      #     tags: ${{ github.sha }}
      #     # directory: ./test/
      #     # dockerfile: ./test/Dockerfile
      #     registry: 312013929070.dkr.ecr.ap-northeast-1.amazonaws.com
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # with:
        #   image: busyboxplus
        #   tags: ${{ github.sha }}
        #   registry: ghcr.io
        #   username: ${{ github.actor }}
        #   password: ${{ secrets.GITHUB_TOKEN }}
        #   directory: ./test/
        #   dockerfile: ./test/Dockerfile

      # - name: deploy-docker-image-to-aws-eks
      #   uses: cancue/eks-action@v0.0.2
      #   env:
      #     aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws_region: ap-northeast-1
      #     cluster_name: panda-k8s
      #   with:
      #     args: |
      #       image=312013929070.dkr.ecr.ap-northeast-1.amazonaws.com/server:${{ github.sha }}
      #       time=`date`
      #       echo "${time}, prepare to update image: ${image}"

      #       kubectl set image ds server server=${image}
      #       kubectl get pod

